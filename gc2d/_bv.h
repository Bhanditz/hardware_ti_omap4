/*
 * Copyright (c) 2011, Texas Instruments, Inc.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Texas Instruments, Inc. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL Texas Instruments, Inc. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef _BV_H
#define _BV_H

#define LS(x, y) \
	SETFIELDVAL(0, AQ_COMMAND_LOAD_STATE_COMMAND, OPCODE, LOAD_STATE) \
	| SETFIELD(0, AQ_COMMAND_LOAD_STATE_COMMAND, COUNT, y) \
	| SETFIELD(0, AQ_COMMAND_LOAD_STATE_COMMAND, ADDRESS, x / 4);

#define CONFIG_GPU_PIPE(n) \
	SETFIELD(0, AQ_PIPE_SELECT, PIPE, n)

#define CONFIG_DEST_CMD(n) \
	SETFIELD(0, AQDE_DEST_CONFIG, COMMAND, n)

#define CONFIG_DEST_SWIZZLE(n) \
	SETFIELD(0, AQDE_DEST_CONFIG, SWIZZLE, n)

#define CONFIG_DEST_FMT(n) \
	SETFIELD(0, AQDE_DEST_CONFIG, FORMAT, n)

#define CONFIG_CLIP_LFTTOP(l, t) \
	SETFIELD(0, AQDE_CLIP_TOP_LEFT, X, l) | \
	SETFIELD(0, AQDE_CLIP_TOP_LEFT, Y, t)

#define CONFIG_CLIP_RHTBTM(r, b) \
	SETFIELD(0, AQDE_CLIP_BOTTOM_RIGHT, X, r) | \
	SETFIELD(0, AQDE_CLIP_BOTTOM_RIGHT, Y, b)

#define CONFIG_PE2DCACHE_FLUSH() \
	SETFIELD(0, AQ_FLUSH, PE2D_CACHE, AQ_FLUSH_PE2D_CACHE_ENABLE)

#define CONFIG_ROP_TYPE(n) \
	SETFIELD(0, AQDE_ROP, TYPE, n)

#define CONFIG_ROP_BCKGND(n) \
	SETFIELD(0, AQDE_ROP, ROP_BG, n)

#define CONFIG_MLTSRC_ROP_BCKGND(n) \
	SETFIELD(0, GCREG_DE_ROP, ROP_BG, n)

#define CONFIG_ROP_FORGND(n) \
	SETFIELD(0, AQDE_ROP, ROP_FG, n)

#define CONFIG_SRC_ORIGIN(l, t) \
	SETFIELD(0, AQDE_SRC_ORIGIN, X, l) \
	| SETFIELD(0, AQDE_SRC_ORIGIN, Y, t)

#define CONFIG_SRC_SIZE(w, h) \
	SETFIELD(0, AQDE_SRC_SIZE, X, w) \
	| SETFIELD(0, AQDE_SRC_SIZE, Y, h)

#define CONFIG_SRC_ROT_MODE(n) \
	SETFIELD(0, AQDE_SRC_ROTATION_CONFIG, ROTATION, n)

#define CONFIG_SRC_ROT_WIDTH(w) \
	SETFIELD(0, AQDE_SRC_ROTATION_CONFIG, WIDTH, w)

#define CONFIG_SRC_ROT_HEIGHT(h) \
	SETFIELD(0, AQDE_SRC_ROTATION_HEIGHT, HEIGHT, h)

#define CONFIG_DEST_ROT_MODE(n) \
	SETFIELD(0, AQDE_SRC_ROTATION_CONFIG, ROTATION, n)

#define CONFIG_DEST_ROT_WIDTH(w) \
	SETFIELD(0, AQDE_SRC_ROTATION_CONFIG, WIDTH, w)

#define CONFIG_SRC_LOCATION(n) \
	SETFIELD(0, AQDE_SRC_CONFIG, LOCATION, n)

#define CONFIG_SRC_FMT(n) \
	SETFIELD(0, AQDE_SRC_CONFIG, SOURCE_FORMAT, n)

#define CONFIG_SRC_TRANSPARENCY(n) \
	SETFIELD(1, AQDE_SRC_CONFIG, TRANSPARENCY, n)

#define CONFIG_SRC_SWIZZLE(n) \
	SETFIELD(0, AQDE_SRC_CONFIG, SWIZZLE, n)

#define CONFIG_SRC_PIX_CALC(n) \
	SETFIELD(0, AQDE_SRC_CONFIG, SRC_RELATIVE, n)

#define CONFIG_PE_EVENT(n) \
	SETFIELD(0, AQ_EVENT, PE_SRC, AQ_EVENT_PE_SRC_ENABLE)

#define CONFIG_PE_EVENT_ID(n) \
	SETFIELD(0, AQ_EVENT, EVENT_ID, n)

#define CONFIG_START_DE(n) \
	SETFIELD(0, AQ_COMMAND_START_DE_COMMAND, OPCODE, n) | \
	SETFIELD(0, AQ_COMMAND_START_DE_COMMAND, COUNT, 1)

#define CONFIG_STOP_FE() \
	SETFIELD(0, AQ_COMMAND_END_COMMAND, OPCODE, AQ_COMMAND_END_COMMAND_OPCODE_END)

#define CONFIG_MLTSRC_ROP_TYPE(n) \
	SETFIELD(0, GCREG_DE_ROP, TYPE, n)

#define CONFIG_MLTSRC_ROP_FORGND(n) \
	SETFIELD(0, GCREG_DE_ROP, ROP_FG, n)

#define CONFIG_MLTSRC_ORIGIN(l, t) \
	SETFIELD(0, GCREG_DE_SRC_ORIGIN, X, l) \
	| SETFIELD(0, GCREG_DE_SRC_ORIGIN, Y, t)

#define CONFIG_MLTSRC_SIZE(r, b) \
	SETFIELD(0, GCREG_DE_SRC_SIZE, X, r) \
	| SETFIELD(0, GCREG_DE_SRC_SIZE, Y, b)

#define CONFIG_MLTSRC_ROT_MODE(n) \
	SETFIELD(0, GCREG_DE_SRC_ROTATION_CONFIG, ROTATION, n)

#define CONFIG_MLTSRC_LOC(n) \
	SETFIELD(0, GCREG_DE_SRC_CONFIG, LOCATION, n)

#define CONFIG_MLTSRC_FMT(n) \
	SETFIELD(0, GCREG_DE_SRC_CONFIG, SOURCE_FORMAT, n)

#define CONFIG_MLTSRC_SWIZZLE(n) \
	SETFIELD(0, GCREG_DE_SRC_CONFIG, SWIZZLE, n)

#define CONFIG_MLTSRC_CTRL(n) \
	SETFIELD(GCREG_DE_MULTI_SOURCE_ResetValue, GCREG_DE_MULTI_SOURCE, MAX_SOURCE, n)

#define CONFIG_ALPHA_CTRL(n) \
	SETFIELD(0, AQDE_ALPHA_CONTROL, ENABLE, n)

#endif
